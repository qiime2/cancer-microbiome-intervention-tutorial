name: main

on:
  # build on all PRs, but only trigger push builds on `main`
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: lint
      uses: github/super-linter@v4
      env:
        VALIDATE_ALL_CODEBASE: true
        VALIDATE_JSCPD: false
        DEFAULT_BRANCH: main

  doc-build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - name: checkout source
      uses: actions/checkout@v2

    - name: setup miniconda
      # Replaces conda-incubator/setup-miniconda@v2
      uses: qiime2-cutlery/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: 3.8

    - name: install latest QIIME 2 amplicon distro (passed)
      run: |
        envFile=qiime2-amplicon-ubuntu-latest-conda.yml
        wget https://raw.githubusercontent.com/qiime2/distributions/dev/latest/passed/$envFile
        conda env create -q -p ./test-env --file $envFile

    - name: install dependencies
      run: |
        conda install -p ./test-env -q -y \
          -c conda-forge \
          -c bioconda \
          -c defaults \
          --override-channels pip

    - name: install pip dependencies
      shell: bash -l {0}
      run: |
        conda activate ./test-env
        pip install -r book/requirements.txt

    - name: build book preview
      shell: bash -l {0}
      run: |
        conda activate ./test-env
        make build_preview

    - name: build full book
      shell: bash -l {0}
      env:
        Q2DOC_HTML_BASEURL: https://docs.qiime2.org/jupyterbooks/cancer-microbiome-intervention-tutorial/
      run: |
        conda activate ./test-env
        make build_full

    - name: deploy to docs
      uses: burnett01/rsync-deployments@5.2
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        switches: -avzr --delete --chmod=Du=rwx,Dg=rx,Do=rx,Fu=rw,Fg=r,Fo=r
        path: book/_build/html/
        remote_path: ${{ secrets.STATIC_SITE_WWW }}
        remote_host: ${{ secrets.STATIC_SITE_HOST }}
        remote_user: ${{ secrets.STATIC_SITE_USER }}
        remote_key: ${{ secrets.STATIC_SITE_PEM }}
